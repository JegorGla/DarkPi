import qrcode
import customtkinter as ctk
import tkinter as tk
from PIL import ImageTk, Image

def clear_frame(frame):
    for widget in frame.winfo_children():
        widget.destroy()

def create_qr_code_ui(parent_frame, go_back_callback=None):
    clear_frame(parent_frame)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ–Ω–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–º—É —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º)
    parent_frame.configure(fg_color="transparent")

    # –í–ª–æ–∂–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å —Ü–≤–µ—Ç–æ–º (–≤ —Ü–µ–Ω—Ç—Ä–µ –æ–∫–Ω–∞)
    panel_frame = ctk.CTkFrame(parent_frame, fg_color="#2E1A47", corner_radius=15)
    panel_frame.pack(padx=15, pady=15, fill="both", expand=True)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_label = ctk.CTkLabel(panel_frame, text="üéØ QR Code Generator", 
                               font=("Helvetica", 24, "bold"), text_color="#E0C3FC")
    title_label.pack(pady=(30, 20))

    # –ü–æ–ª—è –≤–≤–æ–¥–∞
    site_entry = ctk.CTkEntry(panel_frame, placeholder_text="Enter website URL",
                              width=300, height=40, corner_radius=10)
    site_entry.pack(pady=10)

    filename_entry = ctk.CTkEntry(panel_frame, placeholder_text="Save as (e.g., my_qr.png)",
                                  width=300, height=40, corner_radius=10)
    filename_entry.pack(pady=10)

    status_label = ctk.CTkLabel(panel_frame, text="", text_color="#A8E6CF")
    status_label.pack(pady=5)

    # –ü–∞–Ω–µ–ª—å –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
    sidebar_frame = ctk.CTkFrame(panel_frame, width=220, fg_color="#1B1B2F", corner_radius=10)
    sidebar_visible = False  # –§–ª–∞–≥

    # –ú–µ—Ç–∫–∞ –¥–ª—è QR-–∫–æ–¥–∞
    qr_image_label = ctk.CTkLabel(sidebar_frame, text="QR will appear here", text_color="#ffffff")
    qr_image_label.pack(pady=20, padx=10)

    is_animation = False

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏ (–ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ)
    def toggle_sidebar():
        nonlocal sidebar_visible
        if sidebar_visible:
            animate_sidebar_close(sidebar_frame)  # –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –ø–ª–∞–≤–Ω–æ
            sidebar_visible = False
        else:
            sidebar_frame.place(relx=1.0, rely=0.0, anchor="ne", relheight=0)  # –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 0
            animate_sidebar_open(sidebar_frame)  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å –ø–ª–∞–≤–Ω–æ
            sidebar_visible = True

    # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    def animate_sidebar_open(frame, current_height=0, is_animation=True):
        if is_animation and current_height < 1.0:
            new_height = current_height + 0.05
            frame.place_configure(relheight=new_height)
            parent_frame.after(20, animate_sidebar_open, frame, new_height, is_animation)
        else:
            frame.place_configure(relheight=1.0)


    def animate_sidebar_close(frame, current_height=1.0):
        if current_height > 0:
            new_height = current_height - 0.05
            frame.place_configure(relheight=new_height)
            parent_frame.after(20, animate_sidebar_close, frame, new_height)
        else:
            frame.place_forget()  # –£–±–∏—Ä–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∏–∑ –æ–∫–Ω–∞, –∫–æ–≥–¥–∞ –æ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—á–µ–∑–Ω–µ—Ç


    # –ö–Ω–æ–ø–∫–∞ –≥–∞–º–±—É—Ä–≥–µ—Ä
    hamburger_btn = ctk.CTkButton(
        panel_frame,
        text="‚ò∞",  # –°–∏–º–≤–æ–ª –≥–∞–º–±—É—Ä–≥–µ—Ä–∞
        width=40,   # –®–∏—Ä–∏–Ω–∞
        height=40,  # –í—ã—Å–æ—Ç–∞
        font=("Helvetica", 20, "bold"),  # –®—Ä–∏—Ñ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        command=toggle_sidebar,
        fg_color="#6A0572",  # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏
        hover_color="#AB83A1",  # –¶–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        corner_radius=20,  # –ö—Ä—É–≥–ª—ã–µ —É–≥–ª—ã
        text_color="#E0C3FC",  # –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
        border_width=2,  # –®–∏—Ä–∏–Ω–∞ –≥—Ä–∞–Ω–∏—Ü—ã
        border_color="#FFFFFF"  # –¶–≤–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã
    )
    hamburger_btn.place(relx=0.1, rely=0.05, anchor="ne")

    # –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞
    def create_qr():
        data = site_entry.get().strip()
        filename = filename_entry.get().strip()

        if not data:
            status_label.configure(text="‚ö†Ô∏è Please enter a URL.")
            return

        if not filename:
            filename = "qr_code"

        qr = qrcode.QRCode(
            version=1,
            error_correction=qrcode.constants.ERROR_CORRECT_H,
            box_size=10,
            border=4,
        )
        qr.add_data(data)
        qr.make(fit=True)
        img = qr.make_image(fill_color="black", back_color="white")
        img_path = "Qr_Codes/" + filename + ".png"
        img.save(img_path)

        status_label.configure(text=f"‚úÖ QR saved as {img_path}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR
        qr_pil_img = Image.open(img_path)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        qr_pil_img = qr_pil_img.resize((200, 200))  # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        qr_img = ImageTk.PhotoImage(qr_pil_img)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π tkinter

        # –û–±–Ω–æ–≤–ª—è–µ–º label —Å QR –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        qr_image_label.configure(image=qr_img, text="")
        qr_image_label.image = qr_img  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –∏—Å—á–µ–∑–ª–æ

        # –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
        start_button.configure(text="üîÅ Regenerate QR Code", command=create_qr)

    # –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞
    start_button = ctk.CTkButton(panel_frame, text="‚ö° Generate QR Code", 
                                 command=create_qr, corner_radius=8, fg_color="#6A0572", hover_color="#AB83A1")
    start_button.pack(pady=20)

    if go_back_callback:
        back_btn = ctk.CTkButton(panel_frame, text="‚Üê Go Back", command=go_back_callback,
                                 fg_color="#44475A", hover_color="#6272A4")
        back_btn.pack(pady=(10, 30))
